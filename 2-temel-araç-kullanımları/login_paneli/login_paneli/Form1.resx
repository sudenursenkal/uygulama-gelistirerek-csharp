<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSEhUSEhQSFhUVGRkVFxgYGBcaFRgZGhgXGBUXFxUY
        HSggGRolHRUYITEhJSorLi4uGB8zODMtNygtLiv/2wBDAQoKCg4NDhsQEBszJiAmLy0tLS0tLy8tLy4t
        LS8tLS8vLy0tKy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCACoAS0DASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAwQHAQL/xABNEAABAwIBBQgMDQMEAQUAAAABAAIDBBEhBRIxQVEG
        ExZhcZLR0gcVIjJSVIGRk6GxwRQXM0JTYmNkcoLC4fAjNLJDc6LT8ySDlLPx/8QAGgEBAAMBAQEAAAAA
        AAAAAAAAAAMEBQECBv/EADgRAAEDAQUECAQGAgMAAAAAAAEAAhEDBBIhMVEFQWGBExQycZGhsdEiweHw
        FSMzUmJyovE0gtL/2gAMAwEAAhEDEQA/ALEiIpV8+iIiIiIiIiIiIiIoGXddStJGc42wuGkg8h1ovTWl
        2QU8ir3DGl2ycz917wxpdsnM/dcXeiforAir3DGl2ycz904Y0u2Tmfukp0T9FYUVe4Y0u2TmfunDGl2y
        cz90lOiforCir3DGl2ycz904Y0u2Tmfukp0T9FYUVe4Y0u2TmfunDGl2ycz90lOiforCir3DGl2ycz90
        4Y0u2Tmfukp0T9FYUVe4Y0u2TmfunDGl2ycz90lOiforCir3DGl2ycz904Y0u2Tmfukp0T9FYUVe4Y0u
        2TmfupLJWV4qgExOvm6QRYi+g22YJK4abgJIW+iIuryiIiIiIiIiIiIiIiIiIiIiIiIiIo1lS9pzXG+o
        E6+I8aJCkkWOGYO5diyIiw1XeP8Awu9hXOtzO5aorg/eN7/p5udnuLe+va1gb96V0Wq7x/4Xewqh7jay
        SMSb297L5l81xF7Z1r25V5KtWd11rj3Lff2Mq4YH4OP/AHD1E+LSt03pvSHi+pxhSvbio+nm57ulfUWW
        KjO+Xl0H57ulcIgSp6dUVHhg3kDHiYx4YqHHY0rdtNj9oeosnxW5Q+7+kPVU+6aszc/fJ83T3zrctyVo
        9uaj6ebnu6V4Y4PEgqza6VSyPu1W6wQRBjTHyMEbwFHfFblD7v6Q9VPityh939IeqpLtzUfTzc93SrFk
        DKErorukeTnHEuJOgca93SqnWW6FUv4rcofd/SHqp8VuUPu/pD1V0b4XJ4bvOVFbpd0UlLCZAS5xIY0F
        xtc3NzxAArkFdbaA4gAGT3KnfFblD7v6Q9VPityh939Ieqt7Je7et31jahhDHOa0kCRpaXGzTckgi5Cv
        HwuTw3ecoMd691anRGHhc5+K3KH3f0h6qfFblD7v6Q9VdG+FyeG7zlVXKmVpxK8CaUAHAB7re1dulR9Z
        boVB/FblD7v6Q9VPityh939IeqpLtzUfTzc93Ssb8tVd2sjkqJHuvmtbI7GwuSSTYBCI3r0yuHm61pla
        PxW5Q+7+kPVT4rcofd/SHqraj3Q1YfvUrqiJ9s4Bz3Yi9rjFbHbmo+nm57ulcAnIrtSrcN1zSCo74rMo
        fd/SHqrU3AsLZ5mnSG2PKHgKcGWaj6ebnu6VCbgj/Xm/D+sLoEKN9UPpugK8oiL2qKIiIiIiIiIiIiIi
        IiIiIiL4fIBpIGrHavtYauPOYQcURZWuB0LUrae+OnaPetFjy02JPE73Hj9qkIKrU7z9KIcFpRSFpHqO
        3iPGpZpuLrFLStdpHmXzG7Nj22zgPI4gexF06rDlGos1zR4Jv5iqHuX0P/L+pWyoOc13g2OPhYH1e1VP
        cvof+X9S5vU9MRTdyU8s9FK1r2uc3OaNI4v5isCloMgSOxcWtHnPmHShAOBXhriwhzcxiO8K1VkjI4TI
        S0sI70aSDgARbC+HnXPycdnFs4ld66jEkRjuASAAbbLavIq1WZFkjBdg5o0kabbbFQUG3QZWntW0Cq9o
        aQQBOGpzHgBx1xUarNub+R/MfYFWVZtzfyP5j7ApysoqWWjlamz2g2BzDngcdiLjjAJW3LIGi50LRqMo
        AggZ2ItcqGrUY0Q4q9YbJaarw+iyYOeAHiSBktX4ASWA5pzrPFnNdYAggmxwNxoKmlAUbt7fn4nAi18M
        SOhS0Fa1xtiCdtvao6VenlOKv7TsNrJv3DdAzEHvkAz5R5rZVQyv8tJy+4K3qoZX+Wk5fcFaCwlpqU3M
        1sbKgRuAz5GuDH7LWLh5QL/lWhS0zpHBjBcn+Ek7FMZP3LvbURTve3+lndzYm5cCO+NradhVa016TG3X
        ug/f3K0dmU6hrtqNGAzO7KN6zbtJ4mOjiIY+V181zdLGgXcQba9FuXYq4rPl/c4aiWOVjw0xhwIIJDr8
        d8PMoOvydJCRngWOgg3BXmy2ik4XQ7HRT7WpVDV6SPhgCf8AXetULQ3A/Lzfh/WFvhaG4H5eb8P6wrZW
        YzsP7gr0vAF6szbtYXAEk3tYXNhpw2nQvL3QMMzgO/7z4anAxU2BxxyAk93vJAHE6YrFUOazDunP8Fov
        jy6Ao12VO7zN7cXXtYEE8ejDDlXlfWSQ2daxe21iSc06nFui9sPIVqZFIc57nBxNvmnunZ2BaBx6Sb+q
        6s0qN1pLsfvTcBzPFVa1e88NYLvDh3nMnUR3Kdja4i5aW8Rtf1Eos9PVB2Ga9uoZwsCdgvidGzUtd07C
        9zWnFukWtZRQdFMCNV6iIuLqIiIiIiIiIiIijaqC2BFwVrNcWmx0aj7jx+1TL2AixWjPSHHC4RdncVno
        5bix1exfD2ZzQ06DI4HkzpDb1LVpXljwHazYHl1Hj9q3G6G/7r/bKuLuS+apjGRuw+a7l0FUvcVGCJbi
        /efqVprXGQPtewDvUD/LqsbiNEv5P1JvUrP0nclZWwtGIAwW2a6Twz6lgXxI1pBa94Y1zc0uOht8L48q
        FQtaXENG/DxUc7do3OzQ6V3G0C3mvf1KWiyk6RgIeXNcPOCp/IuSo6WJsUQNhc3OLiTiSSoGehZC4sYe
        5u51tTQ5xdYcQuoaVa+YWtb9nNs9IPB3wVrbw3YFswTOYLNNhpspHc/kf4S8tzs0AXva51YWvxqyRbio
        h30kh5AB7ipiVnU6FSoJbkqZJUvcLFxI0rFnHi8yvrtxtORYGUHbce9qxwbiYh38kjtlrN8+BXgtYcx5
        BWWU7WwXWPIHBxCo2ceLzL0SOGIthjoV8fuMpzodKPKD7WqNyluQEcbpGSuOaL2c3TjtB9yXKeg8AuvN
        tAM1HR/c+6rfw2Twj6lkbTMeM5zQScSdq01JU/ejkUiz0poWxnOYA02tcbP4FvQukdoctVbu9EMFjpxP
        l0Y7FStjmMAMC8TAJE/fctTZdF9ercvENAkwSPTX0C8mEjRfOuFp1P8AUAD+6ANxfapBlOQXNJGjGxBG
        OixGCj3CxI2C68WNzHEtcBeboAPvH5FS7Vs76BBY9xY7VxOPjotcUEfgD1qn7hB/6if8J/zV4CpG4b+4
        n/Cf81fKzKfYfyV3WeqqmxNDnXtawsLnWelYFhywHmHOjLgWd8BrbxjWvJAL2TlMeOXnh3kLy1xFN8Zx
        PgQT5SeSq9dUGR5e44njvYah5FJbna2OIvMhtcC2BO2+jyKWyLLFJC2OzSWjumkDbpVfy2xrZnBgAAsL
        AWANhdaF4PmmRH0WUWmnFUGf9K3007JmBzcWnbpuD6jhdVrJxPwl+Fr3wx27Tp1LFkbKu8Z4IJDsR+Ie
        7oWzkKEkuldr7ke/2AKMs6MO03c1MKgqlkZ5nkphERVlbREREREREREREREW5FRggG5xKhrV2UQC858C
        fRT0LPUrkimMuIHqo6qHc+Vv+QWJuhv+6/2yqWkyaCLZx1HRsIPuXgyWMO6ODi7QNZcbf8lX/EbPqfA+
        yt/hdpjsjxb7qKd8if8AbP8AiqXuH0S/k/UujVGTgInDOODDq2NK5zuH0S/k/UpqNop1sWHLgR6qOrZa
        lCm7pBnxB9DxVpVb3YTEiOJoJziXWGJNrBoAGnSVZFY6PJ7I7OzRn2sXW7rjAOocS8Wu1Cg0GJJyXrZt
        nNWrO5ufPL5rLktkzII4nN/qFjAQ4DOvYWx0qtTtc1xDwQ65BB03GlXmHKbgG4NJaLAkYgKLraUStIOn
        UdYKo09o02OGhz4e/HuwnJa9tsb7RTaAYLf8jgOWAEd+MZr63AfKP5PeFdT5POVS9wkZbLIDgQLHzhW2
        sqhG25JvqHc4rVcRms+xNJp3YxkrOCOLzlfT/wCY2WnRVZkJIBzdRw0rcf5fJb3ryCCJCtuaWmCvm44u
        cVpZa/t5OTbfWFvY/W/4rRy1/byadGu20bF6Ciq9h3cVyxSVP3o5FGK55HyXE6GNzm4ltziele5WI1pd
        koIBeGcNkZGdLw5w2dzm3vzwrYMkQ6m8ffO6VXt1ZpKQxzOifJPZ7YY2Ofd2AMlwCQGgWubHUoKl90gR
        ELTsTLOwtfUDi8ERERgR3EngtOWQNc1tzeUkDHDBpcfUPWvshaG5vLdNXVMcU9M+GZmc6I748tOHdAju
        cc0HSCMCryckwn5v/J3SuUg9gDcIU20BZ6r3PAcHmImIyAxxJHI8lVQqRuG/uJ/wn/NdgGR4fBPOd0rk
        O4gWqajkP/2KfMrNa27TfPBXVfUUljfykbRsXwi65l4QRgqzal0hzTiFiiyaGyiWAganRnC4OnNPr8ii
        KzItQ6RxzHOu4m9xjc8uCsNPDnm3nUgKdoFsbcqqVtomyuuk3jhmJIHEyJOmExmVdobLbbG3rt0Y5GAT
        wBaYGpBicgqrTbnXDupSB9UHEn3KUa0AWGAGhZqiLNOGj3LErNOs6u2+XSDoI5Ric9VVq0G2d/R3bpGc
        mSeM4DLQRwXqLxer3CjkIiIi6i+A/EjHQTy7fcvtYZhiHbLA8mnpUVVxaA7Q492XlnyVyxUm1nuokfE4
        G7/YYgf9ou81swgE2NyMeXQsayUx7oeX2LBUOs0lSRiqrZfDRv8AnH0XsL7i/LbkupPJ7+5I2H2/wqMh
        bZoHEtugfZ1tuCqW+nfoO4Y+H0lXrBVFO1AjI4eOXoFJrxerxfML6pYq35N/4Hf4lcr3DaJfy/qXVK35
        N/4Hf4lcr3DaJfy/qW1sjJ/L5rH2x2B97wrdSszntG1w9uKncrykMIBIJF8NODmj3qHyY8CVpcbDHHVo
        NlNVEUchPdnvbWBBsM4G9uWybRP5rbwwAnnPhuTYpDWz/MT3DHLjjCgxUP8ACdzipuSr3sRl2hwxOzAY
        rWdDEG2DXk/hdc+WyZZH9JurR/iFA2kx9VjDiDOXcVt7VrFlAvZgRjl3Kao7teXR988ZtxjcfzWpikya
        B3crmudsOIHLtXOqesezvHELN22m+kctCjYLhBe69GWg5L5p21RjdZE5wc+cLqLS3Vm+ZfbnDaPauV9t
        pvpHJ22m+kcrt1Qdeb+3zXUQ5u1vmWrlq3weS1tGrlC5x21m+kcvHZUmIsXkhLq4+2hzSLvmtJdAyF/b
        xfh6VQVfshf28X4eleiqlHMreUFugpLyRzWxa10YOzOLSfPmD1qbmmawXcQBxqHynlWNzCxuJNsbYab6
        1BVaXMIC0bJXbRrtc6InGd04TyUdQ5JDqqOUsIkivibghpBBBGvvsFa1Wsj14jc/fHF2daxsMLXvfbpU
        9TVbJO8cDxa/MVyiwtZipdoV2Va5uEGIEjfh9jktgLlPYkpGS1tWHgkBpI1f6q6sFyLsY5Ujpqyqc+9n
        NIFtu+XXqoWhhv5b1HZWvdUAYJK6/wBo4fAdzv3UXlahZE5uaCA6+Bx0W0Hypwxp/reroWjXZdimLSHA
        Nbe19JJtfQOJZdpdQNIimBO6AfbRbVKz2kO+NpjivoNAXhC1u2EXhj19C97YReGPX0LJuu0PmrnRu08l
        sZo2BM3iHmWakqYiwEubYStDzsBGHIDZ3mSqnYGPJLQWylr8O9wOaNGAwd5lN0L7t6d07/v7OmPi6Z7K
        w5vEPMtaujGbewuE7YReGPX0LFVVTXNs03upbG2p07YnPy3qrtBrW2d98bjEjfujitRERfTL49FnmoXW
        wzTcazb3LApiLvRyD2LM2nVexjbpiZ9FsbGY11UuIkiCOBnMcVGUlNK0gOaLDDOzhsNsFimoZXYZrQL+
        Fp6FNr5JWWy3VmxB113iNchmNCtp9kpOeX3QCdANSZywJnE7xgoyWnLRcht9gN/WsTHWIOwXW5VuuCox
        7nXwb5SQtiwPc+gS/HE+ELB2jRYy0htOGzHAAyccNwzOCsAK9UA2plAtfRxBe/DJtvqHQsg7PrjIL6EW
        qzRjWZ4n/wAqWr3WikP1Hf4lcSyXlSSAHe83urXuL6L218a7Hk2llqSWOJ3u1nnC9jqGGlac3YwoGaZK
        rns/61p2Cg+i114YkrPt1yqRdcHCN05zxA0C5vwon+z5p6Vkg3YVTDdhjB/Bf2kq4cE8j+MVPnH/AFLe
        HY8ybYHfKqxFxd7BhyGNXnAOF12IVFlEMcHNAkKj8Oq3w2ejb0L4n3Z1bxZ7oyPwAeyyvg7HWTT/AKlV
        h9ePqKP4J5H8YqvOP+pRNoUmmWtAPcFM51RwLXHA8VTOFE/2fNPSnCif7PmnpV5qNxWSWWz5qoZwzh3T
        b2Og23rDyryLcVklzXObNVFrcXHObYeeJTSVX6uzQKj8KJ/s+aelOFE/2fNPSrozcjkckAT1RJwAuP8A
        qW5P2P8AJjAS6WpAGnu2ewR3SSnV26Bc/wCFE/2fNPSnCif7PmnpV3buPyQbWmq8TYYixPLvSSbjMktc
        WmaqzhpAIPsiSSnV2aBUjhRP9nzT0qUpeyRXRsaxvwezRYXjdf8AzVkO4zJGZn7/AFWaTm3zm6eTerr2
        HcXklzg0TVVziLkC+vSYrIuig0ZAKrVnZCrZbZ+8YaLMcNP51q8Mqr7HmHrK8VG4PJbBnOlqrcTmnz5s
        ZssFPuMyQ92a2eqJ/E0esxJKGg05gKn8M6r7HmHrLLS7vKuN2c3eb6MWG2P5lan7kMkDAz1Y5f8AxL6m
        3GZIZbOnqRnC47ppw8keC7KCg0bgoH4z6/7t6N3XUt2EX51XUuNrmK5w1mQE4Lbo9w2SpSRHNVOI0900
        e2NWHJW41tCHyUL5N8c0NtJmPa4A3sO5FjxryVLTpi9oOfyBPgCVeb/zNK5runia2rkDQACGOsBYXLcT
        bjWZ26KsGBLb/wC21Rc7pHuc94e57jcnRxDAaAq1oZUqNgN8x7rRsFuslB5c6qIIjAP1H8OCxIvvMd4D
        vOpPJ1EHMJIs65Gi+FhqKz61J9Jt54w7x7rYZteyVTdpOvHSHD1aAsFG9oikaXAGQsZbGzWh2c555LAb
        cStqvrmOE5abmVzGtGvMZ888ZsPOV9HJrtUgH5B0oMmP1yDmDpVfrIiPvfw4ldNoaTMefdw/iPslQi2q
        T+epb1bRBrDrdhbADWFoQh41NHlV+wNdUd0gGAJHl9Vmba2jQNldQJ+N12BwDgZnLcRqtpF42+terXXx
        qKYi70cg9ih1MR96OQexZO1+w3vPotrYvbf3D1X0sMz9S+pJNQWFYa+hWKp71ai26nvVqL6HZf6HM+gX
        zO2P+QP6j1KLZoKN0rs1vlOoDasVNTukcGtFyfVxniVxoKNsTM1vlOsnatAmFSs9A1TJyC9jjbCywwA8
        5PSucdkHdFe9Mxzbn5U50RsPo818jSNROGjlKv2UqaWQODHNYbENcRnZp8LNwvyKiv7GUpJcaqMkkkk0
        0NyTiSTtXhahygLnzQ0EEb3hj3tKfUZVKzZUZK15qWNnmcA1kj3UwEYF7WjbJY4knT773et7HIcyNkb4
        Yywd2/4PE58jtpNhYacBtWPJvY2zJGvllilYNLN4iaHYYXIBNtfkRebpVSgya4QEU8scolAM8UMdOSxo
        uRvr98ttw0aVrtEEtQze94pWYd0807w0tF85xMt3EkaANivHAGoG+Njq2xskJzo2U8YZY37kgaQAbYr1
        vY5AgMWfCZC7O3408RcG4dw1trAYacdJRLp0VJrnC0klRHvsk9jFUPFOwFrcM9rN87u7ba8MF7TUznwM
        ijlZLnyF7qWNlMZBm/6jiJNgG21wrfUdjqeTN3ysa7MGa3Op4jmt1NbfQOJfNP2PZoXZ0dayN1rXbBE0
        21i41Il0qoQyRGra6Ew0bQe5LvgzxEQ3ElxluSTfVrXzVQsEcr3xNkdLId7qiKdrHWcc8tbvtnF1na8L
        8StPxanxuH/48KzybgJXMbG6uYWMvmtMEWa2+nNboCJdKqcUe+QwM32Oa0hDaRrabfAMXOIIl+dY7Tiv
        KaUMqyYXR0YJLO6FM7ehazg4mS5xB1XVqp+x5JG4PZWxtc3EObBCHDkI0LyTscvcS51ZEXOJJJp4SSTi
        STrN0S6VU5aONkD7QsfaXNbVNEAjIFu4Dd9sb2vpvisgzZWQPllhnLHNhbTZtMJN71Brmy6DgBruVbBu
        Al3vevhzN7JzizeIszO8LN0X418s7GUgIcKqMEEEEU0NwRiCCiXSqkw73PJE0tpGSne5GvbTHMY75sgM
        lyADsvYpUUcYhe1kTJN6kxqmbxvZb81paZLC9wQbg6FfZtwTpInNlljfO5wd8IdBGZLAAZhBGIsNPHxL
        Vp+x3OwOa2rYGPtnsFPEGvA0B4GkafOiXSqqJmTgVFVPBM6M5m8PFO2R7L6GyNl+sTjsKj8s0YZKbwfB
        w7umxvFPcDRgXSAkXBxXTavcS0u/pxUDG20OpmvN9ZuHNw4rL4yzuMlqWx58sIdHcXELS2xtYBrnHNtb
        bii7dK5lkutNPK2WMsDm7PgwuPnNJE2ghdn3O5YZPG17SLO+s12a7WwlpIuOVV6i3Ab2xzXfBJHEgtc+
        mYc3whYOFweUW41KZI3OywEgGlDDiWxQb1d2gEkPPsRdaCFvZcyXn3kYO6HfDwht5VW1eYc63dWuoPL2
        S7XlYMNLhs+sOLavQKp2qzz+Y3n7+6glI0He+XoUcpGg73y9Co7T/Q5he9kf8nkfktleEr1YZX3wXzq+
        oWKeTAlYYpM64IC+qjvT/Nax0utaVCkw2V9SPiBwOnZ9ysy0Vni2soz8JbiNe37BYEXgXq+gOa+WbkvC
        Vvsq2loAIGA04FaKKrarK20NAJiFdsdsdZnEgTK37jaF4XDaPOo/NGwJZUfwkfv8vqtD8cMfp/5fRbNR
        UNtYEE8WPsWBEWjZ6AoMuAysy12k2ipfIjCPX3ViydU0sDbOngDzi68jAeQAm9lt9vaXxmn9LH0qiVtH
        vuD2tc3UDj/ComTcnEdALeRx991LdU9O2Ma2IjzXUe3tL4zT+lj6U7e0vjNP6WPpXKuCEe2TnDqpwQj2
        yc4dVLpXvrtNdV7e0vjNP6WPpTt7S+M0/pY+lcq4IR7ZOcOqnBCPbJzh1UurvXGLqvb2l8Zp/Sx9Kdva
        Xxmn9LH0rlXBCPbJzh1U4IR7ZOcOql1OuMXVe3tL4zT+lj6VpVmVqdzsKintb6WPrLm/BCPbJzh1U4IR
        7ZOcOql1OuM4roPbGDxin9NH1k7YweMU/po+sufcEI9snOHVTghHtk5w6q5dXOt0+K6D2xg8Yp/TR9ZO
        2MHjFP6aPrLn3BCPbJzh1U4IR7ZOcOql1Ot0+K6D2xg8Yp/TR9ZSMGW6YNANRT3A+lj6Vy3ghHtk5w6q
        cEI9snOHVS6nXGcV1Xt7S+M0/pY+lO3tL4zT+lj6VyrghHtk5w6qcEI9snOHVXbq71xi6r29pfGaf0sf
        Snb2l8Zp/Sx9K5VwQj2yc4dVOCEe2TnDqpdTrjF1Xt7S+M0/pY+lO3tL4zT+lj6VyrghHtk5w6qcEI9s
        nOHVS6nXGLqvb2l8Zp/Sx9KdvKXxmn9LH0rlfBCP6/OHVW3TbnY48WsbfaSSfWl1cNtaMgrTlSOIODoX
        scx2PcuBt5RqWSg708vQouIG3daVkime3DAjTrCrW2i+rRuszkKOw2inStHSOwEHKSpOSTUFiWqKo+CO
        d+yGrPgjnfssTqFp/Z5t91vfidl/f5O9lsSmw0XWDf8AYANawzTPcLAAeUk+xYmNfrI8y07JYQGfnDGd
        TG7MAxmsq27SLqk0HYREwJmTkSJGB4LKiItNY6Lap6MnF2A9f7LXY8g3HsWf4c7W0HzjpVO1G0RFEc5E
        8vfwg4q9YxZQZrnlBjmR6eMhfNZPE3ADOPEcPKVFPnJ0YcikJmRO+YWn6pAHmtb1LQNOeL2exUWUrTdI
        N7mZ8MTK+noWrZLHAi6Ha3fnEDnBXrKh3LyrYieSLn/98i+IqcDE4n1BfGUzJvZMXfDk0a7X1rSs1Ko3
        tu5fX28VhbTtdlruu2emB/KLpPIQI/sC7gFtLwE3BF8NWo8qidz2V6uOQODQ5hIzw9o0XxzTgQbXtiAr
        FlStbM7ObGI+S13cZAFvarNRkfCcVnACmQ9rxeHCfceKx/DtsY8lvevDVx64yPL0LCipdRpjslw7nFTn
        aNU9oNPe0H2Wbfodj/MfevQYT86ywIU6q4dmq7mQfknXGHtUWcgR81sinYdEgT4Fsc31LSMbdg8wXojG
        y3q9idDaBlV8Wj5QnT2U50Y7nn5+6+md097BcmMZzr2tbDQfKvViZA1pLgLE6dV+XasqtMDgPiMlV65o
        l35IIEbyDjvyRERelCiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIv/2Q==
</value>
  </data>
</root>